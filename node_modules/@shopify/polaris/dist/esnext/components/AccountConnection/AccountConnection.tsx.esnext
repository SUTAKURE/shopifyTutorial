import React__default from 'react';
import { Avatar as Avatar$1 } from '../Avatar/Avatar.tsx.esnext';
import { TextStyle as TextStyle$1 } from '../TextStyle/TextStyle.tsx.esnext';
import { buttonFrom } from '../Button/utils.tsx.esnext';
import { Stack as Stack$1 } from '../Stack/Stack.tsx.esnext';
import { Card as Card$1 } from '../Card/Card.tsx.esnext';
import { SettingAction as SettingAction$1 } from '../SettingAction/SettingAction.tsx.esnext';
import styles from './AccountConnection.scss.esnext';

function AccountConnection({
  connected = false,
  action,
  avatarUrl,
  accountName = '',
  title,
  details,
  termsOfService
}) {
  const initials = accountName ? accountName.split(/\s+/).map(name => name[0]).join('') : undefined;
  const avatarMarkup = connected ? /*#__PURE__*/React__default.createElement(Avatar$1, {
    accessibilityLabel: "",
    name: accountName,
    initials: initials,
    source: avatarUrl
  }) : null;
  let titleMarkup = null;

  if (title) {
    titleMarkup = /*#__PURE__*/React__default.createElement("div", null, title);
  } else if (accountName) {
    titleMarkup = /*#__PURE__*/React__default.createElement("div", null, accountName);
  }

  const detailsMarkup = details ? /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(TextStyle$1, {
    variation: "subdued"
  }, details)) : null;
  const termsOfServiceMarkup = termsOfService ? /*#__PURE__*/React__default.createElement("div", {
    className: styles.TermsOfService
  }, termsOfService) : null;
  const actionElement = action ? buttonFrom(action, {
    primary: !connected
  }) : null;
  return /*#__PURE__*/React__default.createElement(Card$1, {
    sectioned: true
  }, /*#__PURE__*/React__default.createElement(SettingAction$1, {
    action: actionElement
  }, /*#__PURE__*/React__default.createElement(Stack$1, null, avatarMarkup, /*#__PURE__*/React__default.createElement(Stack$1.Item, {
    fill: true
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles.Content
  }, titleMarkup, detailsMarkup)))), termsOfServiceMarkup);
}

export { AccountConnection };
