import React__default from 'react';
import { layer } from '../../../shared.ts.esnext';
import { classNames } from '../../../../utilities/css.ts.esnext';
import { PositionedOverlay as PositionedOverlay$1 } from '../../../PositionedOverlay/PositionedOverlay.tsx.esnext';
import styles from '../../Tooltip.scss.esnext';

class TooltipOverlay extends React__default.PureComponent {
  constructor(...args) {
    super(...args);

    this.renderOverlay = () => {
      const {
        active,
        activator,
        preferredPosition = 'below'
      } = this.props;
      return /*#__PURE__*/React__default.createElement(PositionedOverlay$1, {
        active: active,
        activator: activator,
        preferredPosition: preferredPosition,
        render: this.renderTooltip
      });
    };

    this.renderTooltip = overlayDetails => {
      const {
        measuring,
        desiredHeight,
        positioning
      } = overlayDetails;
      const {
        id,
        children,
        light
      } = this.props;
      const containerClassName = classNames(styles.Tooltip, light && styles.light, measuring && styles.measuring, positioning === 'above' && styles.positionedAbove);
      const contentStyles = measuring ? undefined : {
        minHeight: desiredHeight
      };
      return /*#__PURE__*/React__default.createElement("div", Object.assign({
        className: containerClassName
      }, layer.props), /*#__PURE__*/React__default.createElement("div", {
        className: styles.Wrapper
      }, /*#__PURE__*/React__default.createElement("div", {
        id: id,
        role: "tooltip",
        className: styles.Content,
        style: contentStyles
      }, children)));
    };
  }

  render() {
    const markup = this.props.active ? this.renderOverlay() : null;
    return markup;
  } // eslint-disable-next-line @shopify/react-no-multiple-render-methods


}

export { TooltipOverlay };
